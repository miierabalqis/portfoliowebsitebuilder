name: CI/CD
on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  verify-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | podman login --username ${{ github.actor }} --password-stdin
      - name: Build Podman image
        run: |
          podman build \
            --build-arg NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }} \
            --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }} \
            --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }} \
            --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }} \
            --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }} \
            --build-arg NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }} \
            -t ${{ secrets.DOCKER_HUB_USERNAME }}/<your-image-name>:${{ github.sha }} .
      - name: Run ESLint
        run: podman run --rm ${{ secrets.DOCKER_HUB_USERNAME }}/<your-image-name>:${{ github.sha }} npm run lint
      - name: Run Tests
        run: podman run --rm ${{ secrets.DOCKER_HUB_USERNAME }}/<your-image-name>:${{ github.sha }} npm run test
      - name: Push Podman image
        if: github.ref == 'refs/heads/main'
        run: |
          podman tag ${{ secrets.DOCKER_HUB_USERNAME }}/<your-image-name>:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/<your-image-name>:latest
          podman push ${{ secrets.DOCKER_HUB_USERNAME }}/<your-image-name>:${{ github.sha }}
          podman push ${{ secrets.DOCKER_HUB_USERNAME }}/<your-image-name>:latest

      - name: Install Vercel CLI
        if: github.ref == 'refs/heads/main'
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        if: github.ref == 'refs/heads/main'
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        if: github.ref == 'refs/heads/main'
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        if: github.ref == 'refs/heads/main'
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
